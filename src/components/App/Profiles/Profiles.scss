@use '../../../styles/variables' as v;

.profiles {
  max-width: 700px;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  background-color: rgb(180, 125, 125);
  padding: v.$gutter;
}

:root {
  --timing: 400ms;
  --rotation: 20deg;
}

body {
  display: grid;
  place-content: center;
  min-height: 100vh;
  perspective: 1000px;
}

img {
  max-width: 100%;
}

.character {
  width: 150px;
  aspect-ratio: 9 / 16;
  position: relative;
  transform-style: preserve-3d;
  transition: rotate var(--timing) ease;
}

.character:hover {
  rotate: x var(--rotation);
}

.character::before {
  content: '';
  position: absolute;
  inset: 0;
  z-index: 100;
  background-image: radial-gradient(circle, transparent 100px, black);
  opacity: 0;
  transition: opacity var(--timing);
}

.character:hover::before {
  opacity: 1;
  border-radius: 10px;
}

.character::after {
  content: '';
  position: absolute;
  inset: 80% 0.5rem 0.5rem;
  translate: 0;
  transform: translateZ(-100px);
  background: black;
  filter: blur(1rem);
  z-index: 1;
  transition: rotate var(--timing), translate var(--timing) ease;
}

.character:hover::after {
  rotate: x calc(var(--rotation) * -1);
  translate: 0 20px;
}

.back-image {
  position: absolute;
  z-index: 10;
  height: 100%;
  object-fit: cover;
  object-position: center;
  border-radius: 10px;
}

.name,
.front-image {
  position: absolute;
}

.name {
  z-index: 1000;
  width: 65%;
  margin-inline: auto;
  inset: auto 0 2rem;
  transition: var(--timing);
}

.character:hover .name {
  transform: translateY(-2rem) translateZ(100px);
  rotate: x calc(var(--rotation) * -1);
}

.front-image {
  object-fit: contain;
  width: 100%;
  height: 100%;
  /* Le scale est à adapter en fonction de l'image en front*/
  scale: 1.125;
  transform-origin: bottom;
  opacity: 0;
  inset: 15% 0 0;
  z-index: 100;
  transition: var(--timing);
}

.character:hover .front-image {
  opacity: 1;
  /* Le translateY est à adapter en fonction de l'image en front*/
  transform: translateY(-2rem) translateZ(0px);
  rotate: x calc(var(--rotation) * -1);
}
